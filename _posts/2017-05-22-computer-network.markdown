---
layout:     post
title:      "计算机网络"
subtitle:   "第3章 数据链路层"
date:       2017-05-22 12:00:00
author:     "HE"
header-img: "img/home-bg.jpg"
header-mask: 0.3
catalog:    true
tags:
    - 计算机网络
    - 基础知识
---

数据链路层使用的信道主要是以下两种类型：

1. **点对点信道**——使用一对一的点对点通信方式
2. **广播信道**——使用一对多的广播通信方式

### 点对点信道的数据链路层

##### 数据链路和帧

**链路**就是从一个结点到相邻结点的一端物理链路，而中间没有任何其他的交换结点

**数据链路**除了物理线路外，还必须有一些必要的通信协议来控制这些数据的传输

点对点的信道的数据链路层在进行通信时的主要步骤：
1. 结点A的数据链路层把网络层交下来的IP数据报添加首部和尾部封装成帧
2. 结点A把封装好的帧发送给结点B的数据链路层
3. 若结点B的数据链路层收到的帧无差错，则从收到的帧中提取出IP数据报上交给上面的网络层；否则丢弃这个帧

![点对点通信的数据链路层](/img/computer-network/PPP-data-link.png)

##### 三个基本问题

* **封装成帧**：就是在一段数据的前后分别添加首部和尾部。网络层的IP数据报传送到数据链路层就称为帧的数据部分。帧长等于数据部分的长度加上帧首部和帧尾部的长度，而首部和尾部的一个重要作用就是进行帧定界（确定帧的界限）
![帧首部和帧尾部封装成帧](/img/computer-network/frame-structure.png)
控制字符SOH（Start Of Header）表示帧的首部开始，控制字符EOT（End Of Transmission）表示帧的结束
![控制字符进行帧定界](/img/computer-network/SOH-EOT.png)

* **透明传输**：所传输的数据中的任何8比特的组合都可以放在帧中传输过去。如果数据中出现控制字符SOH或EOT，则发送端的数据链路层在数据中出现控制字符的前面插入一个转义字符ESC，而接收端的数据链路层在数据送往网络层之前删除这个插入的转义字符（所传送的数据比特流中可以传送任意组合的比特流，而不会引起对帧边界的判断错误）
![透明传输](/img/computer-network/transparent-transmission.png)

* **差错检测**：在发送的码序列中加入适当的冗余度以使得接收端能够发现传输中是否发生差错。数据链路层广泛使用循环冗余检验CRC的检错技术

  在接收端对收到的每一帧经过CRC检验后：
  1. 若得出的余数$$R=0$$，则判定这个帧没有差错，就接受
  2. 若余数$$R\neq0$$，则判定这个帧有差错（但无法确定究竟是哪一位或哪几位出现了差错），就丢弃

  在数据链路层使用CRC检验，能够实现无比特差错的传输，但这还不是可靠传输（可能会出现帧丢失、帧重复、帧失序等问题）

### 点对点协议

##### PPP协议的特点

* **PPP协议应满足的需求**

  1. **简单：**接收方每收到一个帧，就进行CRC检验。如果CRC检验正确，就收下这个帧；反之，就丢弃这个帧，其他什么也不做

  2. **封装成帧：**规定特殊字符作为帧定界符（标志一个帧的开始和结束的字符），以便使接收端从收到的毕业流中准确地找出帧的开始和结束位置

  3. **透明性：**如果数据中碰巧出现了和帧定界符一样的比特组合时，就要采取有效的措施来解决这个问题

  4. **多种网络层协议；**PPP协议必须能够在**在同一条物理链路上同时支持多种网络层协议**的运行

  5. **多种类型链路：**除了要支持多种网络层的协议外，PPP还必须能够在多种类型的链路上运行

  6. **差错检测：**PPP协议必须能够对接收端收到的帧进行检测，并立即丢弃有差错的帧

  7. **检测连接状态：**PPP协议必须具有一种机制能够及时自动检测出链路是否处于正常工作状态

  8. **最大传送单元：**必须对每一种类型的点对点链路设置最大传送单元MTU的标准默认值。如果高层协议发送的分组过长并超过MTU的数值，PPP就要丢弃这样的帧。MTU是数据链路层的帧可以在和的数据部分的最大长度，而不是帧的总长度

  9. **网络层地址协商：**PPP协议必须提供一种机制使通信的两个网络层的实体能够通过协商知道或能够配置彼此的网络层地址

  10. **数据压缩协商：**PPP协议必须提供一种方法来协商使用数据压缩算法。但并不要求将数据压缩算法进行标准化

* **PPP协议不需要的功能**

  1. **纠错：**可靠运输由运输层TCP协议负责，而数据链路层的PPP协议只进行检错。（PPP协议是不可靠传输协议）

  2. **流量控制：**端到端的流量控制由TCP负责

  3. **序号：**PPP是不可靠传输协议，不需要使用帧序号

  4. **多点线路：**不支持多点线路（一个主站轮流和链路上的多个从站进行通信），只支持点对点的链路通信

  5. **半双工或单工链路：**PPP协议只支持全双工链路

* **PPP协议的组成**

  1. 将IP数据报封装到串行链路的方法。IP数据报在PPP帧中就是其信息部分，IP数据报的长度受最大传送单元MTU的限制（MTU的默认值至少是1500字节）

  2. 一个用来建立、配置和测试数据链路连接的链路控制协议LCP

  3. 一套网络控制协议NCP，其中的每一个协议支持不同的网络层协议

##### PPP协议的帧格式

* **PPP的帧格式**

  PPP帧的首部和尾部分别为四个字段和两个字段，首部的第一个字段和尾部的第二个字段都是标志字段F（Flag），规定为0x7E。标志字段表示一个帧的开始或结束。

  ![PPP帧的格式](/img/computer-network/PPP-frame.png)

  首部中的地址字段A规定为0xFF，控制字段C规定为0x03

  PPP首部的第四个字段是2字节的协议字段，表示PPP帧的信息字段是IP数据报、链路控制协议LCP的数据或者是网络层的控制数据

* **字节填充**

  PPP异步传输时使用转义符0x7D避免信息字段中出现和标志字段一样的比特（0x7E）组合：

  1. 信息字段出现0x7E -> (0x7D,0x5E)

  2. 信息字段出现0x7D -> (0x7D,0x5D)

  3. 信息字段出现ASCII控制字符（数值小于0x20的字符） -> 在前面加入一个0x7D字节

* **零比特填充**

  PPP同步传输时使用零比特传输，发送端只要发现**信息字段**有5个连续1，则立即填入一个0。接收端发现**信息字段**5个连续1时，就把这5个连续1后的一个0删除。

  ![零比特填充与删除](/img/computer-network/zero-bit.png)
  
* **PPP协议的工作状态**
  
  ![PPP协议工作状态](/img/computer-network/PPP-status.png)

### 使用广播信道的数据链路层

##### 局域网的数据链路层

局域网：网络为一个单位所拥有，且地理范围和站点数目均有限

![局域网的拓扑结构](/img/computer-network/LAN-topology.png)

**共享信道的划分**

1. **静态划分信道：**频分复用、时分复用、波分复用和码分复用等。（代价较高，不适合于局域网使用）

2. **动态媒体接入控制（多点接入）：**信道并非在用户通信时固定分配给用户

   * **随机接入：**所有的用户可随机地发送信息。如果共享媒体产生碰撞（恰巧两个或更多的用户在同一时刻发送信息），则发送都失败

   * **受控接入：**用户不能随机地发送信息，轮询

**适配器的作用**

1. **进行数据串行传输和并行传输的转换**，因为适配器和局域网之间的通信是通过电缆或双绞线以串行传输方式进行，而适配器和计算机之间的通信则是通过计算机主板上的I/O总线以并行传输方式进行

2. **对数据进行缓存**，因为网络上的数据率和计算机总线上的数据率并不相同

3. **在操作系统中安装适配器的设备驱动程序**

4. **实现以太网协议**

5. **处理帧的接收和发送**，适配器接收和发送帧时不使用计算机的CPU，当收到有差错的帧就丢弃，收到正确的帧就通过中断来交付给网络层。计算机发送IP数据报，就下交给适配器，组装成帧后发送到局域网

![网络适配器的作用](/img/computer-network/network-adapter.png)

##### CSMA/CD协议

**以太网的工作方式**

1. 采用**无连接**的工作方式，不必先建立连接就可以直接发送数据。以太网提供的服务是不可靠的交付，即尽最大努力的交付。收到有差错的数据帧就将数据帧丢弃，对有差错帧是否需要重传则由高层来决定。

2. 发送的数据使用**曼切斯特编码**的信号。基带数字信号出现一长串1或0时，接收端无法从收到的比特流中提取位同步信号。

![曼切斯特编码](/img/computer-network/Manchester-code.png)

**载波监听多点接入/碰撞检测（CSMA/CD）**——半双工通信

1. **多点接入**，总线型网络，许多计算机以多点接入的方式连接在一根总线上

2. **载波监听**，每一个站在发送数据之前先检测一下总线上是否有其他站在发送数据，如果有就暂时不发送数据，等待信道变为空闲时再发送。

3. **碰撞检测**，适配器边发送数据边检测信道上的信号电压的变化。总线上有多个站在发送数据时信号电压变化幅度将会增大（相互叠加），当其幅度超过一定阈值就认为至少有两个站同时在发送数据，表明产生了碰撞。一旦发现总线上出现了碰撞，适配器就立即停止发送，然后等待一段随机时间后再次发送。

![CSMA/CD](/img/computer-network/CSMA-CD.png)

以太网的发送不确定性：每一个站在发送数据之后的一小段不确定的时间内存在碰撞的可能（以太网不能保证一段时间之内成功地将数据帧发送出去）

经过争用期（以太网端到端往返时间2$$\tau$$）还没有检测到碰撞，才能肯定这次发送不会发生碰撞

以太网使用**截断二进制指数退避**算法来解决碰撞问题：

1. 确定基本退避时间2$$\tau$$，以太网$$\tau=51.2\mu s$$

2. 从离散的整数集合$$\{0,1,...,(2^{k}-1)\}$$中随机取出一个数$$r$$。重传推后的时间就是$$r$$倍的争用期。$$k=Min\{重传次数,10\}$$

3. 当重传达16次仍不能成功就丢弃该帧，并向高层报告

CSMA/CD协议要点：

1. 适配器从网络层获得一个分组加上以太网的首部和尾部组成以太网帧，放入适配器的缓存中准备发送

2. 若适配器检测到信道空闲（96比特时间内没有检测到信道上有信号，96比特时间是以太网的帧间最小间隔），就发送这个帧；若信道忙，则继续检测并等待信道转为空闲，然后发送这个帧

3. 在发送过程中继续检测信道，若一直未检测到碰撞，该帧发送成功。若检测到碰撞，则中止数据的发送，并发送人为干扰信号

4. 在中止发送后，适配器执行指数退避算法，等待$$r$$倍$$512$$比特时间后，返回步骤2